$git checkout

1) only used for working directory
2) Discard changes of unstaged files
3) in the tracked file (the file which is already added to staged area)

if once i commit file to local repo or staged area and then changes some content and now don't want that content then we use checkout commant
$git checkout --filename 

$git reset <mode> <commitid>

1) To remove changes from staging area or from local repository
2) To undo commits from repositoy level
3) When we did some changes and by mistake commited/added file to local dir then we use this command

--mixed mode
--soft  mode
--hard  mode

a) reset with --mixed mode
   - $git reset --mixed a344f3
   - always pass previus commitid to remove current committed changes
   - reset all changes from local directory and from staging area
   - will not touch working directory

b) reset with --soft mode
   - $git reset --mixed a8y43e
   - when we use soft mode it reset changes only from local directory
   - it will not reset changes from staging and working directory 

c) reset with --hard mode 
   - $git reset --hard a4rds
   - when we use hard mode it reset changes from everywhere
   - take care to use cause it remove everything